substitutions:
  name: esphome-web-a2dc90
  friendly_name: ESP


esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: '1.0'
  includes:
  # - door_lock_rfid.h
  #- uart_read_line_sensor.h
  #libraries:
 # - "SPI"
  #- "MFRC522"
  # Need to override -Wl,-T - the only way is by setting all build_flags
  #platformio_options:
    #build_flags: -DESPHOME_LOG_LEVEL=ESPHOME_LOG_LEVEL_DEBUG -DUSE_STORE_LOG_STR_IN_FLASH -Wl,-Teagle.flash.4m1m.ld -fno-exceptions  




esp32:
  board: esp32dev
  framework:
    type: arduino

sensor:
  - platform: homeassistant
    id: bania_temperature
    entity_id: sensor.bania_temperature
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    #attribute: departure_time
    internal: True  

  - platform: homeassistant
    id: weather
    entity_id: weather.u_doma
    attribute: temperature
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    internal: True 

  - platform: homeassistant
    id: tm22
    entity_id: sensor.tm22
    attribute: departure_time
    internal: True
       

time:
- platform: homeassistant
  id: my_time
  timezone: "Europe/Sofia"

i2c: #for lcd lcd_pcf8574
  sda: 21
  scl: 22
  scan: false
  frequency: 100khz

display:
  - platform: lcd_pcf8574
    dimensions: 20x4
    address: 0x27
    update_interval: 10s
    #lambda: |-
      #it.strftime(0, 0, " %H:%M:%S", id(my_time).now());
      #it.strftime(0, 2, "%d-%m-%Y", id(my_time).now());
      #it.printf(0, 1, "Outside: %.1f C", id(weather).state);
      #it.printf(0, 3, "Inside: %.1f C", id(bania_temperature).state);
      #it.printf(8, 0, "TM22: %.1f ", id(tm22));
    lambda: |-
        static bool page1 = true;

        if (page1 ) {
          it.strftime(5, 1, " %H:%M", id(my_time).now());
          it.strftime(5, 3, "%d-%m-%Y", id(my_time).now());
          it.print(0,0, "TIME:");
          it.print(2,2, "DATE:");
        } else {
          it.printf(5, 1, "%.1f", id(weather).state);
          it.printf(5, 3, "%.1f", id(bania_temperature).state);
          it.print(0, 0, "OUTSIDE:");
          it.print(2,2, "INSIDE:");
          it.print(2,2, "INSIDE:");
        }
        page1 = !page1;
      
spi:
  clk_pin: GPIO14 # SCK on this board
  mosi_pin: GPIO13 # MOSI (misspelt MOIS)
  miso_pin: GPIO12 # MISO

rc522_spi:
  cs_pin: GPIO15 # SDA on this board I reckon (no idea why -- I suspect they just change a jumper for I2C board)
  #reset_pin: GPIO16 # RST
  on_tag:
    then:
      - homeassistant.tag_scanned: !lambda 'return x;'

binary_sensor:
  - platform: rc522
    uid: 73-F5-C5-0C
    name: "RC522 RFID Tag"
  - platform: rc522    
    uid: E3-7B-C0-1C
    name: "RC522 RFID CARD"

      
  - platform: gpio
    pin:
      number: 33
      mode:
        input: true
        pullup: true
    name: "Front Door"
    device_class: door

# Enable logging
logger:

# Enable Home Assistant API
api:
  #encryption:
  # key: "SkBpGdXnb86EdEupLPLPGl8WUEQKKkfFbodY3wsYfRI="

# Allow Over-The-Air updates
ota:

# Allow provisioning Wi-Fi via serial
#improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp Hotspot"
    password: "123654789"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:




# To have a "next url" for improv serial
web_server:
    port: 8081
    auth:
     username: !secret web_server_username
     password: !secret web_server_password
